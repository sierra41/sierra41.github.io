---
title: "[Git] 하나의 PC에서 Git 계정 2개 연동하기"
excerpt: "ssh key를 이용하여 git 계정 2개 연동하기"

categories:
 - Git
tags:
 - Git

toc: true
toc_sticky: true
toc_label: 목차
---
<aside>
💡 "회사용 git 계정과 개인용 git 계정을 둘 다 연동해두고 사용하고 싶다.
 ssh key를 이용하여 git 계정 2개 연동해보자"
</aside>

##  rsa 키 생성

---
> 먼저 콘솔에서 ssh key 생성에 필요한 rsa 키를 생성한다.
### ssh 폴더 생성 & 이동
```
# 생성
$ mkdir .ssh
(이미 존재하면 생략)

# 권한 오류 : mkdir: .ssh: Permission denied
# 해결
$ sudo mkdir .ssh

# 이동
$ cd ~/.ssh
```

### rsa 키 생성
```
# 키 생성
ssh-keygen -t rsa -C "이메일" -f "키이름"

# 예시
# 회사키
ssh-keygen -t rsa -C "company@company.kr" -f "id_rsa_company"
# 개인키
ssh-keygen -t rsa -C "personal@gmail.com" -f "id_rsa_personal"

# 사용할 패스워드 입력(입력안하면 패스)
# 생성 된 키는 보관
```

### rsa 키 확인
```
# 확인
$ ls -al

# 예시
drwxr-xr-x  6 root  admin   192 12 21 15:05 .
drwxr-xr-x  6 root  admin   192 12 21 15:02 ..
-rw-------  1 root  admin  2655 12 21 15:05 id_rsa_company
-rw-r--r--  1 root  admin   571 12 21 15:05 id_rsa_company.pub
-rw-------  1 root  admin  2655 12 21 15:04 id_rsa_personal
-rw-r--r--  1 root  admin   574 12 21 15:04 id_rsa_personal.pub
```

### rsa 등록
```
# 키 등록
$ ssh-add [키이름]

# 예시
$ ssh-add id_rsa_company
$ ssh-add id_rsa_personal

# 비밀번호 입력 필요
```


###  config 생성 & 편집
```
# 파일보기
cat config

# 없으면 생성
cat > config
# 작성 저장 : control + c

# 권한 에러 1
1) sudo cat > config
# (상위폴더로 이동 후)
2) sudo chmod -r 777 .ssh

# 권한에러 2 : no such file or directory나 zsh 권한 없음
# 시스템환경설정 > 사용자및그룹 > 아이디 우클릭 > 고급옵션 > 로그인셸 경로 /bin/bash 로 변경

-----config 내용--------
# 개인 계정
Host github.com-personal
   HostName github.com-personal
   User git
   IdentityFile ~/.ssh/id_rsa_personal

# 업무 계정
Host github.com-company
   HostName github.com-company
   User git
   IdentityFile ~/.ssh/id_rsa_company
----------------------

# repository clone 할 때 Host에 작성한 github.com-company 를 사용함.
# clone 하려는 repo ssh주소가 git@github.com:user234/new-api.git 이면
  git@github.com-company:user234/new-api.git 으로 변경해서 입력하여 클론

```


### .pub(공개키) 복사
```
# 상위 폴더 오픈
sudo open .ssh

# .pub 파일 > 텍스트 편집기로 오픈 전체 복사
```


## git 계정 ssh 키 등록

---

### ssh 키 생성
> 각 git 계정마다 setting > ssh 키 생성 에서
> 계정에 맞는 .pub(공개키) 복사 내용을 입력 후 완료
>
### 연동 확인
```
# 확인
$ ssh -T git@github.com-키이름;

# 예시
$ ssh -T git@github.com-company
$ ssh -T git@github.com-personal

# connecting 연결 확인 후

Hi user234! You've successfully authenticated, but GitHub does not provide shell access.
=> 성공
```

### project clone
> clone 하려는 git repo ssh 주소 복사
> 복사된 내용이 git@github.com:user234/my-project.git 이면
> git@github.com-company:user234/my-project.git
> 와 같이 계정에 맞게 변경 후 사용
```