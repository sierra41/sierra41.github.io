---
title: "[Java] Collection - Array List"
excerpt: "Java Collection Array List의 사용"

categories:
 - Java
tags:
 - Java

date: 2023-02-07T00:00:00Z
toc: true
toc_sticky: true
toc_label: 목차
---
<aside>
💡 Java Collection Framework - Array List 를 알아보자
</aside>

> Array(배열) + List(List인터페이스)의 결합

## Array List 란?

----

- 가장 많이 사용되는 List로 데이터의 저장공간으로 배열을 사용한다
- 인덱스로 자료를 관리하며 인덱스로 자료에 접근이 가능하다
- 데이터의 중복을 허용한다
- 배열과 달리 저장공간이 가변적이므로 저장되는 자료량이 많으면 자동적으로 용량이 늘어난다.
- 인덱스는 0부터 시작되며 특정 인덱스의 자료를 제거되면 후 순위의 모든 자료가 한칸씩 당겨진다
- 객체를 순차적으로 추가, 삭제할 때와 달리 중간 인덱스의 객체를 수정할 때는 속도 저하가 발생한다.

![01](/assets/images/posts/java13.png)

## 사용

---

```java
public static void main(String[] args) {

    ArrayList list1 = new ArrayList(10);

    list1.add(new Integer(5));
    list1.add(new Integer(4));
    list1.add(new Integer(2));
    list1.add(new Integer(0));
    list1.add(new Integer(1));
    list1.add(new Integer(3));

    list1.add(6);

    ArrayList list2 = new ArrayList(list1.subList(1, 4));

    System.out.println(list1);
    System.out.println(list2);

    Collections.sort(list1);
    Collections.sort(list2);

    System.out.println(list1);
    System.out.println(list2);

    System.out.println(list1.containsAll(list2));

    list2.add(2,"A");
    System.out.println(list2);


    list2.set(2,"B");
    System.out.println(list2);

    list1.remove(1);

    list1.remove(new Integer(2));

  }
```

## 함수

---

| 함수 | 사용 |
| --- | --- |
| contains(value) | 리스트에 특정 값이 존재하는지 확인 |
| add(value), add(index, value) | 값 추가, 특정 인덱스에 값 추가 |
| clear() | 리스트의 모든 요소 비우기 |
| addAll(list), addAll(index, list) |  A 리스트의 모든 요소를 B 리스트에 추가 |
| indexOf(value) | 특정 값의 인덱스 순서 반환 |
| get(index) | 해당 인덱스 값 반환 |
| remove(index) | 해당 인덱스 값 제거 |
| set(index, value) | 해당 인덱스의 값을 입력값으로 변경 |
| size()  | 리스트 크기 반환 |
| toString() | 문자열로 반환  "[3, 42, -7, 15]” |

## 참고

---

-